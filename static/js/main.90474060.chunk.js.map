{"version":3,"sources":["DataProvider.js","components/Header.js","components/Balance.js","components/Summary.js","components/Transaction.js","components/Transactions.js","components/SuccessSnackBar.js","components/AddTransaction.js","components/DeleteSnackBar.js","components/Dashboard.js","components/Login.js","components/Register.js","App.js","index.js"],"names":["apiUrl","resource","url","axios","withCredentials","then","response","data","status","catch","error","console","log","JSON","stringify","params","post","id","put","get","delete","json","useStyles","makeStyles","drawer","width","withRouter","history","classes","React","useState","state","setState","toggleDrawer","open","event","type","key","AppBar","position","Toolbar","IconButton","onClick","edge","color","aria-label","Drawer","anchor","onClose","paper","style","marginTop","role","onKeyDown","List","component","to","ListItem","button","ListItemText","primary","a","DataProvider","push","Typography","variant","styles","balance","Balance","transactions","total","reduce","transaction","income","amount","className","summary","padding","textAlign","leftSummary","borderRight","Summary","expense","forEach","Math","abs","Paper","Grid","container","item","xs","margin","display","justifyContent","Transaction","deleteTransaction","swipeRight","content","background","action","title","secondary","Date","date","toDateString","marginBottom","overflowY","maxHeight","Transactions","length","map","SuccessSnackBar","Alert","props","elevation","handleClose","reason","Snackbar","autoHideDuration","severity","AddTransactionDialog","undefined","handleDateChange","handleFormChange","e","target","value","handleFormSubmit","preventDefault","handleSubmit","this","Dialog","aria-labelledby","DialogTitle","DialogContent","onSubmit","spacing","TextField","label","onChange","required","fullWidth","FormGroup","FormControlLabel","control","Checkbox","inputProps","checked","utils","MomentUtils","keyboard","placeholder","format","animateYearScrolling","autoOk","clearable","Button","Component","AddTransaction","successOpen","dialogOpen","handleSuccessSnackClose","handleDialogOpen","addTransaction","Fab","bottom","right","DeleteSnackBar","Dashboard","deleteSnack","componentDidMount","provider","filter","tr","handleDeleteSnackClose","Login","emailAddress","password","dataProvider","email","Register","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90474060.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { stringify } from \"query-string\";\r\n\r\n// import updateProvider from \"./updateProvider\";\r\n// import createProvider from \"./createProvider\";\r\n\r\nconst apiUrl = \"https://www.simpleapps.pw\";\r\n// const axios = fetchUtils.fetchJson;\r\n\r\nexport default {\r\n    getList: (resource, params = {}) => {\r\n        // console.log(\r\n        //     `getList called for resource ${resource} with params : ${JSON.stringify(\r\n        //         params\r\n        //     )}`\r\n        // );\r\n        // const { page, perPage } = params.pagination;\r\n        // const { field, order } = params.sort;\r\n        // const query = {\r\n        //     sort: `${field} ${order}`,\r\n        //     skip: JSON.stringify((page - 1) * perPage),\r\n        // };\r\n        // if (Object.keys(params.filter).length > 0)\r\n        //     query.where = JSON.stringify(params.filter);\r\n\r\n        const url = `${apiUrl}/${resource}`;\r\n\r\n        return axios(url, { withCredentials: true })\r\n            .then((response) => ({\r\n                data: response.data,\r\n                status: response.status,\r\n                // total: parseInt(headers.get(\"X-Total-Count\"), 10),\r\n            }))\r\n            .catch((error) => {\r\n                console.log(`Error in get ${JSON.stringify(error)}`);\r\n                return {\r\n                    status: error.response.status,\r\n                    data: error.response.data,\r\n                };\r\n            });\r\n    },\r\n\r\n    getOne: (resource, params) =>\r\n        axios(`${apiUrl}/${resource}/${params.id}`).then(({ json: data }) => ({\r\n            data: data,\r\n        })),\r\n\r\n    getMany: (resource, params) => {\r\n        console.log(\r\n            `getMany called with resource : ${resource} params : ${JSON.stringify(\r\n                params\r\n            )}`\r\n        );\r\n\r\n        const query = {\r\n            where: JSON.stringify({ id: params.ids }),\r\n        };\r\n\r\n        const url = `${apiUrl}/${resource}?${stringify(query)}`;\r\n\r\n        return axios(url).then(({ data }) => ({ data: data }));\r\n    },\r\n\r\n    getManyReference: (resource, params) => {\r\n        console.log(`getManyReference called`);\r\n\r\n        const { page, perPage } = params.pagination;\r\n        const { field, order } = params.sort;\r\n        const query = {\r\n            sort: `${field} ${order}`,\r\n            skip: JSON.stringify((page - 1) * perPage),\r\n            where: JSON.stringify({\r\n                ...params.filter,\r\n                [params.target]: params.id,\r\n            }),\r\n        };\r\n        const url = `${apiUrl}/${resource}?${stringify(query)}`;\r\n\r\n        return axios(url).then(({ headers, json }) => ({\r\n            data: json,\r\n            total: parseInt(headers.get(\"content-range\").split(\"/\").pop(), 10),\r\n        }));\r\n    },\r\n\r\n    // update: updateProvider,\r\n    // (resource, params) =>\r\n    //     axios(`${apiUrl}/${resource}/${params.id}`, {\r\n    //         method: 'PUT',\r\n    //         body: JSON.stringify(params.data),\r\n    //     }).then(({ json }) => ({ data: json })),\r\n\r\n    updateMany: (resource, params) => {\r\n        const query = {\r\n            where: JSON.stringify({ id: params.ids }),\r\n        };\r\n        return axios(`${apiUrl}/${resource}?${stringify(query)}`, {\r\n            method: \"PUT\",\r\n            body: JSON.stringify(params.data),\r\n        }).then(({ json }) => ({ data: json }));\r\n    },\r\n\r\n    create: (resource, params) => {\r\n        // console.log(`Params data : ${JSON.stringify(params.data)}`);\r\n\r\n        return axios\r\n            .post(`${apiUrl}/${resource}`, params.data)\r\n            .then((response) => {\r\n                return {\r\n                    data: { ...params.data, id: response.data.id },\r\n                };\r\n            });\r\n    },\r\n    login: (params) => {\r\n        return axios\r\n            .put(`${apiUrl}/api/v1/entrance/login`, params, {\r\n                withCredentials: true,\r\n            })\r\n            .then((response) => ({ data: response }));\r\n    },\r\n    logout: () => {\r\n        return axios\r\n            .get(`${apiUrl}/logout`, {\r\n                withCredentials: true,\r\n            })\r\n            .then((response) => ({ data: response }));\r\n    },\r\n\r\n    delete: (resource, params) =>\r\n        axios\r\n            .delete(`${apiUrl}/${resource}/${params.id}`)\r\n            .then((json) => ({ data: json.data })),\r\n\r\n    deleteMany: (resource, params) => {\r\n        const query = {\r\n            where: JSON.stringify({ id: params.ids }),\r\n        };\r\n        return axios(`${apiUrl}/${resource}?${stringify(query)}`, {\r\n            method: \"DELETE\",\r\n            body: JSON.stringify(params.data),\r\n        }).then(({ json }) => ({ data: json }));\r\n    },\r\n};\r\n","import React from \"react\";\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Typography,\r\n    IconButton,\r\n    makeStyles,\r\n    Drawer,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataProvider from \"../DataProvider\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n    drawer: {\r\n        width: \"50%\",\r\n    },\r\n});\r\n\r\nfunction Header({ history }) {\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState(false);\r\n\r\n    const toggleDrawer = (open) => (event) => {\r\n        if (\r\n            event.type === \"keydown\" &&\r\n            (event.key === \"Tab\" || event.key === \"Shift\")\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        setState(open);\r\n    };\r\n\r\n    const list = () => (\r\n        <div\r\n            style={{ marginTop: 60 }}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(false)}\r\n            onKeyDown={toggleDrawer(false)}\r\n        >\r\n            <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                <Link to=\"/\">\r\n                    <ListItem button>\r\n                        <ListItemText primary=\"Home\" />\r\n                    </ListItem>\r\n                </Link>\r\n                <Link to=\"/login\">\r\n                    <ListItem button>\r\n                        {/* <ListItemIcon>\r\n                        <InboxIcon />\r\n                    </ListItemIcon> */}\r\n                        <ListItemText primary=\"Login\" />\r\n                    </ListItem>\r\n                </Link>\r\n                <ListItem button>\r\n                    {/* <ListItemIcon>\r\n                        <DraftsIcon />\r\n                    </ListItemIcon> */}\r\n                    <ListItemText primary=\"Register\" />\r\n                </ListItem>\r\n                <Link to=\"/logout\">\r\n                    <ListItem button>\r\n                        <ListItemText\r\n                            primary=\"Logout\"\r\n                            onClick={async () => {\r\n                                let response = await DataProvider.logout();\r\n                                console.log(\"logged out \", response);\r\n                                history.push(\"/\");\r\n                            }}\r\n                        />\r\n                    </ListItem>\r\n                </Link>\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton\r\n                        onClick={toggleDrawer(true)}\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Drawer\r\n                        anchor={\"left\"}\r\n                        open={state}\r\n                        onClose={toggleDrawer(false)}\r\n                        classes={{ paper: classes.drawer }}\r\n                    >\r\n                        {list()}\r\n                    </Drawer>\r\n                    <Typography variant=\"h6\" color=\"inherit\">\r\n                        Expense Tracker\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = makeStyles({\r\n    balance: {\r\n        marginTop: 20,\r\n    },\r\n});\r\n\r\nfunction Balance({ transactions }) {\r\n    const classes = styles();\r\n    let total = transactions.reduce(function (total, transaction) {\r\n        return transaction.income\r\n            ? total + transaction.amount\r\n            : total - transaction.amount;\r\n    }, 0);\r\n    return (\r\n        <div className={classes.balance}>\r\n            <Typography variant=\"h6\">YOUR BALANCE</Typography>\r\n            <Typography variant=\"h4\">₹{total}</Typography>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Balance;\r\n","import React from \"react\";\r\nimport { Paper, Grid, makeStyles, Typography } from \"@material-ui/core\";\r\n\r\nconst styles = makeStyles({\r\n    summary: {\r\n        padding: 20,\r\n        textAlign: \"center\",\r\n    },\r\n    leftSummary: {\r\n        borderRight: \"2px solid grey\",\r\n    },\r\n    paper: {\r\n        marginTop: 20,\r\n    },\r\n});\r\n\r\nfunction Summary({ transactions }) {\r\n    const classes = styles();\r\n\r\n    let income = 0,\r\n        expense = 0;\r\n\r\n    transactions.forEach((transaction) => {\r\n        transaction.income\r\n            ? (income += +transaction.amount)\r\n            : (expense += Math.abs(transaction.amount));\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <Paper className={classes.paper}>\r\n                <Grid container>\r\n                    <Grid\r\n                        item\r\n                        xs\r\n                        className={`${classes.summary} ${classes.leftSummary}`}\r\n                    >\r\n                        <Typography variant=\"body1\">Income</Typography>\r\n                        <Typography variant=\"h6\" color=\"primary\">\r\n                            ₹{income}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs className={classes.summary}>\r\n                        <Typography variant=\"body1\">Expenses</Typography>\r\n                        <Typography variant=\"h6\" color=\"error\">\r\n                            ₹{expense}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Summary;\r\n","import React from \"react\";\r\nimport { makeStyles, Paper, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport {\r\n    SwipeableList,\r\n    SwipeableListItem,\r\n} from \"@sandstreamdev/react-swipeable-list\";\r\nimport \"@sandstreamdev/react-swipeable-list/dist/styles.css\";\r\n\r\nconst styles = makeStyles({\r\n    transaction: {\r\n        margin: 10,\r\n        // padding: 10,\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    transactions: {\r\n        marginTop: 20,\r\n    },\r\n});\r\n\r\nfunction Transaction({ transaction, deleteTransaction }) {\r\n    const classes = styles();\r\n\r\n    const getPrice = () =>\r\n        `₹${transaction.income ? \"\" : \"-\"}${transaction.amount}`;\r\n\r\n    return (\r\n        <SwipeableList>\r\n            <SwipeableListItem\r\n                swipeRight={{\r\n                    content: (\r\n                        <div style={{ background: \"#f00\", color: \"#fff\" }}>\r\n                            Delete Todo\r\n                        </div>\r\n                    ),\r\n                    action: () => {\r\n                        // console.log(`Deleting transaction ${transaction}`);\r\n                        deleteTransaction(transaction);\r\n                    },\r\n                }}\r\n                // swipeLeft={{\r\n                // content: <div>Revealed content during swipe</div>,\r\n                // action: () => console.info('swipe action triggered')\r\n                // }}\r\n            >\r\n                <Paper className={classes.transaction} key={transaction.id}>\r\n                    <ListItem>\r\n                        <ListItemText\r\n                            primary={transaction.title}\r\n                            secondary={new Date(\r\n                                transaction.date\r\n                            ).toDateString()}\r\n                        />\r\n                        <ListItemText\r\n                            primary={getPrice()}\r\n                            style={{ textAlign: \"end\" }}\r\n                        />\r\n                    </ListItem>\r\n                </Paper>\r\n            </SwipeableListItem>\r\n        </SwipeableList>\r\n    );\r\n}\r\n\r\nexport default Transaction;\r\n","import React from \"react\";\r\nimport { Typography, makeStyles } from \"@material-ui/core\";\r\nimport Transaction from \"./Transaction\";\r\n\r\nfunction Transactions({ transactions, deleteTransaction }) {\r\n    const classes = styles();\r\n\r\n    const response =\r\n        transactions.length <= 0 ? (\r\n            <Typography variant=\"h6\" style={{ textAlign: \"center\" }}>\r\n                Add your first todo...\r\n            </Typography>\r\n        ) : (\r\n            transactions.map((transaction) => (\r\n                <Transaction\r\n                    transaction={transaction}\r\n                    key={transaction.id}\r\n                    deleteTransaction={deleteTransaction}\r\n                />\r\n            ))\r\n        );\r\n\r\n    return (\r\n        <div className={classes.transactions}>\r\n            <Typography variant=\"h6\">\r\n                History\r\n                <hr />\r\n            </Typography>\r\n            {response}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = makeStyles({\r\n    transaction: {\r\n        margin: 10,\r\n        // padding: 10,\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    transactions: {\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n        overflowY: \"auto\",\r\n        maxHeight: 520,\r\n    },\r\n});\r\n\r\nexport default Transactions;\r\n","import React from \"react\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { Snackbar } from \"@material-ui/core\";\r\n\r\nfunction SuccessSnackBar({ open, onClose }) {\r\n    const Alert = (props) => {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"success\">\r\n                Todo added!\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n}\r\n\r\nexport default SuccessSnackBar;\r\n","import \"date-fns\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n    TextField,\r\n    Button,\r\n    Grid,\r\n    Fab,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    Checkbox,\r\n    FormGroup,\r\n    FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport SuccessSnackBar from \"./SuccessSnackBar\";\r\n// import DateFnsUtils from \"@date-io/date-fns\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    // KeyboardDatePicker,\r\n    DatePicker,\r\n} from \"material-ui-pickers\";\r\n\r\nclass AddTransactionDialog extends Component {\r\n    state = {\r\n        title: \"\",\r\n        amount: undefined,\r\n        income: false,\r\n        date: undefined,\r\n    };\r\n\r\n    handleDateChange = (date) => {\r\n        this.setState({\r\n            date,\r\n        });\r\n    };\r\n\r\n    handleFormChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        });\r\n    };\r\n\r\n    handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.handleSubmit(this.state);\r\n        this.setState({\r\n            title: \"\",\r\n            amount: undefined,\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.handleClose();\r\n        this.setState({\r\n            title: \"\",\r\n            amount: undefined,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { open } = this.props;\r\n        return (\r\n            <Dialog\r\n                aria-labelledby=\"simple-dialog-title\"\r\n                open={open}\r\n                onClose={this.handleClose}\r\n            >\r\n                <DialogTitle id=\"simple-dialog-title\">\r\n                    Add Transaction\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <form onSubmit={this.handleFormSubmit}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    id=\"title\"\r\n                                    label=\"Expense\"\r\n                                    onChange={this.handleFormChange}\r\n                                    required\r\n                                    error={false}\r\n                                    fullWidth\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    id=\"amount\"\r\n                                    label=\"Amount\"\r\n                                    onChange={this.handleFormChange}\r\n                                    required\r\n                                    error={false}\r\n                                    fullWidth\r\n                                    type=\"number\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormGroup>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Checkbox\r\n                                                color=\"primary\"\r\n                                                inputProps={{\r\n                                                    \"aria-label\":\r\n                                                        \"secondary checkbox\",\r\n                                                }}\r\n                                                onChange={(e) =>\r\n                                                    this.setState({\r\n                                                        income:\r\n                                                            e.target.checked,\r\n                                                    })\r\n                                                }\r\n                                            />\r\n                                        }\r\n                                        label=\"Income\"\r\n                                    />\r\n                                </FormGroup>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                                    <DatePicker\r\n                                        keyboard\r\n                                        placeholder=\"DD/MM/YYYY\"\r\n                                        format={\"DD/MM/YYYY\"}\r\n                                        // handle clearing outside => pass plain array if you are not controlling value outside\r\n                                        // mask={(value) =>\r\n                                        //     value\r\n                                        //         ? [\r\n                                        //               /\\d/,\r\n                                        //               /\\d/,\r\n                                        //               \"/\",\r\n                                        //               /\\d/,\r\n                                        //               /\\d/,\r\n                                        //               \"/\",\r\n                                        //               /\\d/,\r\n                                        //               /\\d/,\r\n                                        //               /\\d/,\r\n                                        //               /\\d/,\r\n                                        //           ]\r\n                                        //         : []\r\n                                        // }\r\n                                        value={this.state.date}\r\n                                        onChange={this.handleDateChange}\r\n                                        // disableOpenOnEnter\r\n                                        animateYearScrolling={false}\r\n                                        autoOk={true}\r\n                                        clearable\r\n                                        // onInputChange={(e) =>\r\n                                        //     console.log(\r\n                                        //         \"Keyboard:\",\r\n                                        //         e.target.value\r\n                                        //     )\r\n                                        // }\r\n                                    />\r\n\r\n                                    {/* <p>\r\n                                        {this.state.selectedDate === null\r\n                                            ? \"Its null\"\r\n                                            : \"Not Null\"}\r\n                                    </p>\r\n                                    <p>\r\n                                        {JSON.stringify(\r\n                                            this.state.selectedDate\r\n                                        )}\r\n                                    </p> */}\r\n                                </MuiPickersUtilsProvider>\r\n                            </Grid>\r\n                            <Button\r\n                                style={{ margin: \"auto\", marginBottom: 20 }}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                type=\"submit\"\r\n                            >\r\n                                Save\r\n                            </Button>\r\n                        </Grid>\r\n                    </form>\r\n                </DialogContent>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default class AddTransaction extends Component {\r\n    state = {\r\n        successOpen: false,\r\n        dialogOpen: false,\r\n    };\r\n\r\n    handleSuccessSnackClose = () => {\r\n        this.setState({\r\n            successOpen: false,\r\n        });\r\n    };\r\n\r\n    handleDialogOpen = () => {\r\n        this.setState({\r\n            dialogOpen: true,\r\n        });\r\n    };\r\n\r\n    handleSubmit = (transaction) => {\r\n        this.props.addTransaction(transaction);\r\n        this.setState({\r\n            dialogOpen: false,\r\n            successOpen: true,\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            dialogOpen: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <SuccessSnackBar\r\n                    open={this.state.successOpen}\r\n                    onClose={this.handleSuccessSnackClose}\r\n                />\r\n                <AddTransactionDialog\r\n                    handleSubmit={this.handleSubmit}\r\n                    handleClose={this.handleClose}\r\n                    open={this.state.dialogOpen}\r\n                />\r\n                <Fab\r\n                    color=\"primary\"\r\n                    aria-label=\"add\"\r\n                    onClick={this.handleDialogOpen}\r\n                    style={{ position: \"fixed\", bottom: 20, right: 20 }}\r\n                >\r\n                    <AddIcon />\r\n                </Fab>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { Snackbar } from \"@material-ui/core\";\r\n\r\nfunction DeleteSnackBar({ open, onClose }) {\r\n    const Alert = (props) => {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"error\">\r\n                Todo deleted!\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n}\r\n\r\nexport default DeleteSnackBar;\r\n","import React, { Component } from \"react\";\nimport Balance from \"./Balance\";\nimport Summary from \"./Summary\";\nimport Transactions from \"./Transactions\";\nimport AddTransactionDialog from \"./AddTransaction\";\nimport provider from \"../DataProvider\";\nimport DeleteSnackBar from \"./DeleteSnackBar\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Dashboard extends Component {\n    state = {\n        transactions: [],\n        deleteSnack: false,\n    };\n\n    componentDidMount = async () => {\n        let response = await provider.getList(\"expense\");\n        if (response.status !== 200) return this.props.history.push(\"/login\");\n        response = response.data.map((transaction) => {\n            return {\n                id: transaction.id,\n                title: transaction.title,\n                amount: transaction.amount,\n                income: transaction.income,\n                date: transaction.date,\n            };\n        });\n\n        this.setState({\n            transactions: response,\n        });\n    };\n\n    addTransaction = async (transaction) => {\n        let response = await provider.create(\"expense\", { data: transaction });\n\n        let transactions = [\n            ...this.state.transactions,\n            {\n                id: response.data.id,\n                title: response.data.title,\n                amount: response.data.amount,\n                income: response.data.income,\n                date: response.data.date,\n            },\n        ];\n\n        this.setState({\n            transactions,\n        });\n    };\n\n    deleteTransaction = (transaction) => {\n        provider.delete(\"expense\", { id: transaction.id });\n\n        let transactions = [...this.state.transactions];\n        transactions = transactions.filter((tr) => tr.id !== transaction.id);\n        this.setState({\n            transactions,\n            deleteSnack: true,\n        });\n    };\n\n    render() {\n        return (\n            <>\n                <Balance transactions={this.state.transactions} />\n                <Summary transactions={this.state.transactions} />\n                <Transactions\n                    transactions={this.state.transactions}\n                    deleteTransaction={this.deleteTransaction}\n                />\n                <AddTransactionDialog addTransaction={this.addTransaction} />\n                <DeleteSnackBar\n                    open={this.state.deleteSnack}\n                    onClose={this.handleDeleteSnackClose}\n                />\n            </>\n        );\n    }\n\n    handleDeleteSnackClose() {\n        this.setState({\n            deleteSnack: false,\n        });\n    }\n}\n\nexport default withRouter(Dashboard);\n","import React, { Component } from \"react\";\r\nimport { Grid, TextField, Button } from \"@material-ui/core\";\r\nimport dataProvider from \"../DataProvider\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nexport class Login extends Component {\r\n    state = {\r\n        emailAddress: undefined,\r\n        password: undefined,\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleFormSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"emailAddress\"\r\n                                label=\"Email\"\r\n                                onChange={this.handleFormChange}\r\n                                required\r\n                                error={false}\r\n                                fullWidth\r\n                                type=\"email\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                onChange={this.handleFormChange}\r\n                                required\r\n                                error={false}\r\n                                fullWidth\r\n                                type=\"password\"\r\n                            />\r\n                        </Grid>\r\n                        <Button\r\n                            style={{ margin: \"auto\", marginBottom: 20 }}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                        >\r\n                            Login\r\n                        </Button>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleFormChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        });\r\n    };\r\n\r\n    handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        await dataProvider.login(this.state);\r\n        this.setState({\r\n            email: undefined,\r\n            password: undefined,\r\n        });\r\n        this.props.history.push(\"/\");\r\n    };\r\n}\r\n\r\nexport default withRouter(Login);\r\n","import React from \"react\";\r\n\r\nfunction Register() {\r\n    return <div>Register</div>;\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\r\nimport Header from \"./components/Header\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Login from \"./components/Login\";\r\nimport Register from \"./components/Register\";\r\n\r\nfunction App() {\r\n    return (\r\n        <>\r\n            <BrowserRouter>\r\n                <Header />\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <Dashboard />\r\n                    </Route>\r\n                    <Route path=\"/login\">\r\n                        <Login />\r\n                    </Route>\r\n                    <Route path=\"/register\">\r\n                        <Register />\r\n                    </Route>\r\n                </Switch>\r\n            </BrowserRouter>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    // <React.StrictMode>\n    <App />,\n    // </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}